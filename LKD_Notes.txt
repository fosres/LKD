
ADVICE FOCUS ON CHANGING ONLY ONE OR TWO LINES FOR THE FIRST PATCH!

0. READ--IN THE NAME OF YOUR LORD--OTHER PEOPLE'S SOURCE CODE!!!

0.5. ADVICE: Run Linux natively on your machine


1. Be certain that you already have the most up-to-date kernel before you start working!

2. BUY A BACKUP HARD DISK. They will save you when a kernel update accidentially bricks your system.

3. Use a serial console to gurantee that you can capture a crash report.

4. Try to use sysrq to capture stack traces.

5. MAKE YOUR OWN TOOL TO GURANTEE YOU CAN CAPTURE CRASH REPORTS.

6. When submittting patches in plain text generated with "diff -up" inline in

plain-text email. No HTML mails. No attachments allowed. Plain ASCII-Text.

Your job is improve the Linux Kernel's support for ASLR--for now.

Eventually, you plan to add ASLP support to the Linux Kernel.

A student admitted it is better to use the bug-finding tools to fix errors. Eventually, those tools will fail you. Get in the habit of making your own bug-finding binary hacking tools.

https://opensource.com/article/18/4/submitting-my-first-patch-linux-kernel


It is better to explore and experiment with the code directly than to read books on Linux Kernel Development.

7. Start by reading FirstKernelPatch:

https://kernelnewbies.org/FirstKernelPatch

You can also read Greg-Kroah Hartman's advice:

https://elinux.org/images/2/24/Write-and-submit-your-first-Linux-kernel-patch-gregkh.pdf

https://opensource.com/article/18/8/first-linux-kernel-patch


